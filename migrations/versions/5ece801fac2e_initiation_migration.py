"""Initiation migration

Revision ID: 5ece801fac2e
Revises: 8ff2b1cbe993
Create Date: 2023-06-22 15:33:32.915517

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '5ece801fac2e'
down_revision = '8ff2b1cbe993'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('co', schema=None) as batch_op:
        batch_op.drop_index('login')

    op.drop_table('co')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('co',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('matricule', mysql.VARCHAR(length=10), nullable=False),
    sa.Column('login', mysql.VARCHAR(length=30), nullable=False),
    sa.Column('prenom', mysql.VARCHAR(length=30), nullable=False),
    sa.Column('nom', mysql.VARCHAR(length=30), nullable=False),
    sa.Column('role_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sigle_service', mysql.VARCHAR(length=30), nullable=True),
    sa.Column('service_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('state', mysql.VARCHAR(length=10), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=60), nullable=False),
    sa.Column('nom_abrege', mysql.VARCHAR(length=30), nullable=True),
    sa.Column('date_debut', mysql.DATETIME(), nullable=False),
    sa.Column('date_fin', mysql.DATETIME(), nullable=True),
    sa.Column('password', mysql.VARCHAR(length=128), nullable=False),
    sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='co_ibfk_1'),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], name='co_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('co', schema=None) as batch_op:
        batch_op.create_index('login', ['login'], unique=False)

    # ### end Alembic commands ###
